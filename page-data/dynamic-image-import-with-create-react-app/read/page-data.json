{"componentChunkName":"component---node-modules-gatsby-theme-blog-src-templates-post-js","path":"/dynamic-image-import-with-create-react-app/read","webpackCompilationHash":"1934dc695baf07d235aa","result":{"data":{"post":{"id":"43f8ba87-e4a3-5eae-a99d-a787d52df06b","title":"Dynamic Image Imports with Create React App","date":"August 27, 2019","excerpt":"Recently I was trying to dynamically import images for a component that renders a list of items, with each item tied to its own image in my…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dynamic Image Imports with Create React App\",\n  \"date\": \"2019-08-27T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recently I was trying to dynamically import images for a component that renders a list of items, with each item tied to its own image in my images folder.\\nTo solve this, a solution would have been to do this.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react'\\nimport birdImage from './images/bird.png'\\nimport catImage from './images/cat.png'\\nimport lionImage from './images/lion.png'\\n\\nconst animals = [\\n  {\\n    name: 'bird',\\n    image: birdImage,\\n  },\\n  {\\n    name: 'cat',\\n    image: catImage,\\n  },\\n  {\\n    name: 'lion',\\n    image: lionImage,\\n  }\\n]\\n\\nexport default () => (\\n  <ul>\\n    {\\n      animals.map(animal => (\\n        <li>\\n          <p>{animal.name}</p>\\n          <img src={animal.image} alt={animal.name}/>\\n        </li>\\n      ))\\n    }\\n  <ul>\\n)\\n\")), mdx(\"p\", null, \"Importing all the images at first and then adding them to thier respective list item works, but this is highly inefficient and stressful. Imaging importing images for up to a 100 items. I wanted something more like the code example below instead.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react'\\n\\nconst animals = ['bird', 'lion', 'cat']\\n\\nexport default () => (\\n  <ul>\\n    {\\n      animals.map(animal => (\\n        <li>\\n          <p>{animal}</p>\\n          <img src={require(`./images/${animal}.png`)} alt={animal}/>\\n        </li>\\n      ))\\n    }\\n  <ul>\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"or-this\"\n  }, \"Or this\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react'\\nimport birdImage from './images/bird.png'\\nimport catImage from './images/cat.png'\\nimport lionImage from './images/lion.png'\\n\\nconst animals = [\\n  {\\n    name: 'bird',\\n    image: `./images/bird.png`,\\n  },\\n  {\\n    name: 'cat',\\n    image: `./images/cat.png`,\\n  },\\n  {\\n    name: 'lion',\\n    image: `./images/lion.png`,\\n  }\\n]\\n\\nexport default () => (\\n  <ul>\\n    {\\n      animals.map(animal => (\\n        <li>\\n          <p>{animal.name}</p>\\n          <img src={animal.image} alt={animal.name}/>\\n        </li>\\n      ))\\n    }\\n  <ul>\\n)\\n\")), mdx(\"p\", null, \"But this dosen\\u2019t work as Webpack (which is used in create react app to bundle javascript files) does all imports at compile time.\\nTo solve this, you need to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require.context\"), \".\\nThe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require.context\"), \" function creates a context module which references files which are in a directory. It takes in 3 parameters.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the directory to match within,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a boolean flag to include or exclude subdirectories,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a regular expression to match files against.\")), mdx(\"p\", null, \"The context module exports a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" function that takes one argument: the request.\"), mdx(\"p\", null, \"The exported function has another property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keys\"), \" which is a function that returns all possible requests that the context module can handle.\"), mdx(\"p\", null, \"Examples:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"/**\\n * The ./svgs folder contains 2 files and a folder which has a file in it\\n * \\\"planet.svg\\\", \\\"world.svg\\\" and \\\"faces/girl.svg\\\"\\n */\\nconst req = require.context(\\\"./svgs\\\", true, /^\\\\.\\\\/.*\\\\.svg$/)\\n\\nconst tableTemplate = req(\\\"./planet.svg\\\")\\n// tableTemplate === require(\\\"./svgs/planet.svg\\\");\\n\\nreq.keys()\\n// is [\\\"./planet.svg\\\", \\\"./world.svg\\\", \\\"./faces/girl.svg\\\"]\\n\")), mdx(\"p\", null, \"Using the context module to solve our earlier problem, we now have this\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import React from 'react'\\n\\nconst requestImageFile = require.context('./images', true, /.png$/);\\n\\nconst animals = ['bird', 'lion', 'cat']\\n\\nexport default () => (\\n  <ul>\\n    {\\n      animals.map(animal => (\\n        <li>\\n          <p>{animal}</p>\\n          <img src={requestImageFile(`./${animal}.png`)} alt={animal}/>\\n        </li>\\n      ))\\n    }\\n  <ul>\\n)\\n\")), mdx(\"p\", null, \"Read more about the Context module in the Webpack docs \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/guides/dependency-management/#requirecontext\"\n  }), \"here\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"site":{"siteMetadata":{"title":"Dev Designer Blog"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"43f8ba87-e4a3-5eae-a99d-a787d52df06b","excerpt":"Recently I was trying to dynamically import images for a component that renders a list of items, with each item tied to its own image in my…","slug":"/dynamic-image-import-with-create-react-app/read","title":"Dynamic Image Imports with Create React App","date":"August 27, 2019","siteTitle":"Dev Designer Blog","socialLinks":[{"name":"Portfolio","url":"https://johnayeni.github.io/portfolio/"},{"name":"Twitter","url":"https://twitter.com/johnayeni_"},{"name":"Github","url":"https://github.com/johnayeni"}],"previous":{"node":{"id":"2e6e879f-5676-531c-b8bb-df4a69625c58","excerpt":"To be able to do this, make sure you first install ImageMagick on your machine. It’s available on Windows, Mac and Linux.\nThen for the gulp…","slug":"/generating-responsive-images-with-gulp/read","title":"Generating responsive images with Gulp","date":"January 13, 2019"}},"next":{"node":{"id":"48639822-01c3-5e4b-bbad-3c8bae1b465f","excerpt":"Hooks  are a new addition in React 16.8. They let you use state and other React features without writing a class. useReducer useReducer  is…","slug":"/custom-react-hooks-use-persisted-reducer/read","title":"Custom React Hooks - Use Persisted Reducer","date":"September 03, 2019"}}}}}